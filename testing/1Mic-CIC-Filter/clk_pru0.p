/* Code for the clock generated by PRU0 and sent to the microphone. */
.origin 0
.entrypoint TOP

#include "prudefs.hp"

// TODO: find a more intuitive way to bind the number of cycles to the sample rate
// XXX: 39 cycles gives us a nice sample rate
#define CYCLES 39
/* XXX: The PRU XOR instruction's 3rd operand must be in the range 0-255 (inclusive).
Since a register is 32-bits long, we have to select a byte of the register if we
want to use an operand > 255 */
#define CLK_PIN r30.b1
// TODO: Figure out how interrupts work
#define PRU0_ARM_INTERRUPT 19

TOP:
    MOV     r0, CYCLES
_LOOP:
    SUB     r0, r0, 1
    QBNE    _LOOP, r0, 0

    // Toggle CLK signal
    // XXX: see above why we do not shift it by 15
    XOR     CLK_PIN, CLK_PIN, 1 << 7
    QBA     TOP

    // Interrupt the host so it knows we're done
    MOV     r31.b0, PRU0_ARM_INTERRUPT + 16
    HALT
